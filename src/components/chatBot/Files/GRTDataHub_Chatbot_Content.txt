Within this document you will find the content for the chatbot. This will be updated when the chatbot content is updated. 
You will also find below the content, the text that will need to be translated in the event of a new chatbot being build. 
Feel free to contact me regarding any questions and improvements via Twitter or Telegram. You can also contact me via the Discussions within GitHub. 
Kind Regards,
Liam | GRTDataHub



Chatbot Content

handleActiveDelegatorCount() {
The Active Delegator Count is <ChatBotActiveDelegatorCountBar />.
Click here to view Active Delegator Count in full view.

handleActiveDelegationCount() {
The Active Delegation Count is <ChatBotActiveDelegationCountBar />.
Click here to view Active Delegation Count in full view.

handleHoldersCount() {
The Holders Count is <ChatBotHoldersCountBar/>.
Click here to view Holders Count in full view.

handleSubgraphsCount() {
The Subgraph Count is <ChatBotSubgraphsCountBar/>.
Click here to view Subgraph Count in full view.

handleCuratorsCount() {
The Curator Count is <ChatBotCuratorsCountBar/>.
Click here to view Curator Count in full view.

handleActiveIndexerCount() {
The Active Indexer Count is <ChatBotActiveIndexerCountBar/>.
Click here  to view Active Indexer Count in full view.

handleTotalGRTDelegatedByDelegators() {
The Total amount of GRT Delegated by Delegators is <ChatBotTotalGRTDelegatedByDelegatorsBar/>.
Click here to view Total amount of GRT Delegated by Delegators in full view.

handleTotalQueryFeesCount() {
The Total Query Fees Count is <ChatBotTotalQueryFeesCountBar/> GRT.
Click here to view Total Query Fees Count in full view.

handleTotalGRTSignalledByCurators() {
The Total Amount of GRT Signalled by Curators is <ChatBotTotalGRTSignalledByCuratorsBar/>.
Click here to view Total Amount of GRT Signalled by Curators in full view.

handleTotalStakedGRTCount() {
The Total Amount of GRT Staked is <ChatBotTotalStakedGRTCountBar/>.
Click here to view Total Amount of GRT Staked in full view.

handleTotalDelegatedGRTByIndexersCount() {
The Total Amount of Delegated GRT by Indexers is <ChatBotTotalDelegatedGRTByIndexersCountBar/>.
Click here to view Total Amount of Delegated GRT by Indexers in full view.

handleTotalGRTBurnedCount() {
The Total Amount of GRT Burned is <ChatBotTotalGRTBurnedCountBar/>.
Click here to view Total Amount of GRT Burned in full view.

handleChoosingIndexers() {
It can be a tough decision choosing an indexer to delegate to. The following information and resources will help you. Just because an Indexer has the highest APY does not mean they are the best for you. Do your own research, take your time and learn what to look for when choosing an Indexer to delegate to. This will ensure you are confident before delegating.
Reading this Graphtronauts guide on How to Choose an Indexer for Delegation in The Graph Protocol and watching the Choosing Indexers tutorial will help you understand what you need to be looking for.
The Graphtronauts app allows delegators to gain useful insights on the Indexer of their choice. Simply insert the ETH address of the Indexer of your choice or have a look at the reviews. You can also Compare Indexers within the app.
Once you are ready to Delegate, please click me and I will provide you with text and video tutorials.

handleJob() {
Want to work in web3? Good news, The Graph ecosystem is hiring! There are opportunities across The Graph Foundation and the core dev teams. Take a look here for current open positions.

handleRoles() {
The Graph Network consists of three roles that provide services to the ecosystem and serve data to Web3 applications such as Uniswap, Aave and Synthetix: Indexers, Curators and Delegators. You can find detailed documentation for each of the roles below.
Indexers
Curators
Delegators
To ensure economic security of The Graph Network and the integrity of data being queried, participants stake and use Graph Tokens (GRT). GRT is a work token that is an ERC-20 on the Ethereum blockchain, used to allocate resources in the network. Active Indexers, Curators and Delegators can provide services and earn income from the network, proportional to the amount of work they perform and their GRT stake.

handleEdgeAndNode() {
The idea behind The Graph Network was conceived and given shape by Graph Protocol, Inc. After having launched the mainnet of The Graph Network on December 17th, 2020, Graph Protocol, Inc. decided to change its name to Edge & Node. The intention behind the change of the name was to highlight the ongoing decentralization in the network. As such, Edge & Node is no longer the central team developing and promoting the protocol. Instead, Edge & Node will provide services to the ecosystem and will be involved with the protocol.

handleTheGraphFoundation() {
The creation of The Graph Foundation was announced in October 2020. Eva Beylin serves as Director of The Graph Foundation. Responsible for stewarding the protocol, The Graph Foundation will provide coordination and support to the ecosystem. The establishment of the foundation was part of the strategy to create an independent organizational structure that is decentralized.
Council Members:
Indexers
Jim Cousins & Gary Morris
Users
Justin J Moses & Kayvon Tehranian
Researchers
Santiago Palladino & Yondon Fu
Backers
Michael Anderson & Spencer Noon
Initial Team
Brandon Ramirez & Yaniv Tal

handleTheGraphCouncil() {
The Graph Council was introduced in October 2020 as a part of the plans to decentralize the protocol. The members of The Graph Council were inaugurated in December 2020. The Graph Council governs the decentralized Graph Network. A 6-of-10 multisig balances the interests of five different stakeholder groups in the ecosystem: Indexers, token holders, initial team, users and technical domain experts.
The mandate of The Graph Council includes the following core functions:
The Graph Foundation Operations
Grants and Ecosystem Funding
Protocol Upgrades
Protocol Parameterization
Emergency Protocol Operations

handleBecomeIndexer() {
How to Become an Effective Indexer on The Graph Network
Minimum Requirements for Indexers - There are four main requirements needed to be an effective Indexer on The Graph Network.
Stake- You must stake at least 100,000 GRT to be an Indexer.
Skills - Ideally, Indexers should have a background in DevOps or experience operating blockchain nodes. Indexers should be comfortable deploying cloud or hosted servers, or running their own server hardware. Familiarity with running a validator node and working on Linux is also suggested.
Hardware - In order to balance efficiency, query output, and speed, many Indexers often start with a setup of 16 CPUs, a 1 TB disk, and 32 GB of RAM.
Infrastructure Software - Familiarity with container and scaling technologies such as Docker and Kubernetes is advantageous, however it is also possible to deploy the Graph software to bare metal. Infrastructure software requirements include a PostgreSQL database, Graph Node, Indexer agent, Indexer service, Prometheus metrics server, and potentially more depending on your specific requirements and setup.
To learn about the best practices for Indexers on The Graph Network, ideal Indexer community participation, a recommended Indexer tech setup, resources and guides and start your indexing journey with The Graph.
This guide helps you learn the operational requirements, best practices, and communication tactics to become a best-in-class Indexer on The Graph Network.

handleGraphDiscord() {
The Graph Official Discord Server can be found here.

handleRewards() {
Indexing rewards are collected and distributed whenever Indexers close their allocations. While they are active, allocations keep accruing rewards continuously. Indexers can either force close their allocations manually or let them be closed automatically after the maximum allocation lifetime (every 28 epochs).
28 epoch = ~26 days
Allocations are continuously accruing rewards while they're active. Rewards are collected by the indexers, and distributed whenever their allocations are closed. That happens either manually, whenever the indexer wants to force close them, or automatically every maximum 28 epochs - max allocation lifetime.
To see your pending rewards, visit Graphtronauts app and add a wallet.

handleQueryFees() {
Whenever an allocation is closed (either manually by an Indexer or automatically after the maximum allocation lifetime), query fees are collected by the protocol's gateway. The query fees are accumulated in the subgraph's query fee rebate pool. The distributed amount of query fees from the rebate pool is calculated based on Indexer's contributions to the rebate pool and their allocated stake on the subgraph.
After an allocation has been closed, query fees can only be claimed by Indexers after the dispute period has passed. Once an Indexer successfully claims the query fees, rebates are distributed to the Indexer and their Delegators.
Following Cobb-Douglas Production Function, a Rebate Pool is created that rewards all network participants (like Indexers) based on their contributions to The Graph Network. The intention behind the Rebate Pool is to encourage Indexers to stake GRT in rough proportion to the amount of query fees they earn for the network. The Rebate Pool receives a fixed portion of query fees that are contributed to it

handleIndexingRewardsAndQueryFees() {
Indexing rewards are distributed across subgraphs in proportion to the subgraph's curation signal. Indexers receive their indexing rewards proportional to the stake they have allocated on a particular subgraph.
Indexing rewards are generated by protocol inflation which is set to 3% annual issuance.
All allocations need to be closed with a valid proof of indexing (POI

handlePOI() {
The so-called proof of indexing (POI) verifies that Indexers have factually indexed the subgraphs they have allocated their stake on. The POI for a block is a digest for all entity store transactions detailing deployment on a subgraph. In order to receive indexing rewards, Indexers have to close an allocation with a valid proof of indexing (POI) that meets the standards set by the arbitration charter. Indexers are not eligible for rewards without a valid POI. When closing an allocation, a POI for the first block of the current epoch must be submitted by the Indexer.
Indexing rewards are collected and distributed whenever Indexers close their allocations. While they are active, allocations keep accruing rewards continuously. Indexers can either force close their allocations manually or let them be closed automatically after the maximum allocation lifetime (every 28 epochs).
28 epoch = ~26 days

handleIndexerHardwareRequirements() {
The hardware requirements to participate in the network as an Indexer can be found in the table below.
Setup
Postgres (CPUs)
Postgres (memory in GB) 
Postgres  (disk in TBs) 
VMs  (CPUs) 
VMs  (memory in GB) 

Small
4
8
1
4
16
 
Standard
8
30
1
12
48

Medium
16
64
2
32
64
  
Large
72
468
3.5
48
184

Small = enough to get started with indexing several subgraphs
Standard = default setup
Medium = required for indexing 100 subgraphs and performing 200-500 requests per second
Large = Required for indexing all currently used subgraphs and serving requests for the related traffic

handleAllocations() {
Allocations are continuously accruing rewards while they're active. Rewards are collected by the indexers, and distributed whenever their allocations are closed. That happens either manually, whenever the indexer wants to force close them, or automatically every maximum 28 epochs - max allocation lifetime.

handleIPFS() {
Documentation for Indexers how to get subgraph's ipfs hash from id and vise versa can be found here.

handleTools() {
The Graphtronauts app allows delegators to gain useful insights on the Indexer of their choice. Simply insert the ETH address of the Indexer of your choice or have a look at the reviews below.
Other very useful sites are:
OracleMiner.com
GraphScan.io
Stake-machine.com
TheGraph.Live
Community Tools and Guides

handleFeesToDelegate() {
Every time you delegate GRT to an Indexer, you need to take a <strong>0.5% delegation fee</strong> into account. For example, if you delegate 10,000 GRT, you will be charged 50 GRT. If your chosen Indexer offers you an earnings potential of 2 GRT per day. Under this assumption, it would take you 25 days (50 GRT / 2 GRT) to break even. To make economically sound decisions, you have to calculate how long it takes you to earn back the 0.5% tax on your delegation.
Delegating to an Indexer will require you to sign <strong>two ETH transactions</strong>. The same holds true for undelegating your GRT. In case of high gas prices, you will have to calculate carefully whether or not it is economically sound to delegate small amounts of GRT.
For example, let us assume that signing two ETH transactions will cost you $25. Let us also assume that you only want to delegate $100. In this case, the transaction costs of delegating would make up a total of 25% of your GRT stack. This means that the time until you break even would be significantly increased.
If Delegators wish to undelegate, they cannot immediately access their tokens. Undelegated tokens are subject to a 26 day thawing period, only then Delegators can freely transfer their tokens or re-delegate them to another Indexer.
Choosing a reputable, trustworthy and effective Indexer is an important decision that should not be taken lightly. Delegators who do not do their due diligence face the risk of delegating to an Indexer with a poor performance. Similarly, they may risk choosing an Indexer who engages in dubious practices or subsidises Delegators for a short time to advertise an attractive APY (Annual Percentage Yield) that is not realistic in the long run.
Documentation on the risks of being a Delegator can be found, here.
How to reduce the cost of gas for delegating your GRT tokens
For the average cost of a delegation transaction at this time, visit the Graphtronauts app and select Fees.

handleDelegateGuides() {
I will provide you with what you need to become a Delegator. The following information and resources will help you.
Watching the Choosing Indexers tutorial will help you understand what you need to be looking for. To ensure you are confident before delegating, watch the tutorials below to get more of an understanding.
You can stake your GRT tokens at network.thegraph.com by delegating them to an indexer of your choice.
There is a 0.5% delegation tax that is incurred at the time of delegation to incentivize delegators to commit to an indexer.
can find guides on how to delegate or stake your GRT here.
Undelegating takes 26 days because that is the maximum duration of an allocation.
Graphtronauts have also made their own guides:
The Complete Guide to become a Delegator
Coinbase Wallet Staking
Binance Staking vs. Delegating with The Graph network
FAQ for The Graph Delegators
How to reduce the cost of gas for delegating your GRT tokens
For the average cost of a delegation transaction, visit Graphtronauts and select Fees.

handleQueryPython() {
How to Query The Graph Protocol for On-Chain Data using Python
Tony Kipkemboi has wrote an amazing step-by-step guide on querying Subgraphs using Python, GraphQL, and Subgrounds.
The full blog can be found here.
You can follow Tony on Twitter to be updated when his second blog is released to the community, "How do I use subgrounds when the Hosted Service is sunsetted?".

handleWeb3DApp() {
How Web3 dApps works?
You can find "A complete guide to Web3 Architecture" here in an extremely helpful Twitter thread.

handleSoulBound() {
Building dApps shouldn't be painful.
Soulbound Studio makes it easy.
No coding required.
One unified interface for designing, iterating, and publishing fully decentralized Web3 APIs and frontends.
If you want to help them design Soulbound Studio by sharing your desired features and bug reports then please join their Discord.
To keep up to date with their latest releases and news, follow Soulbound Labs on Twitter.
For a video tutorial on how you can Build Subgraphs dApps and Analytics in Minutes using Soulbound Studio with no coding at all, watch below.

handleIPhone() {
Don’t keep big money and Bored Apes on your phone in a hot wallet! Because your iPhone is probably syncing your MetaMask info to iCloud. It’s on by default, here is an extremely helpful Twitter thread on how to turn that off!

handleQueryFeesAndIndexingRewardCut() {
The queryFeeCut and indexingRewardCut values are delegation parameters that the Indexer may set along with cooldownBlocks to control the distribution of GRT between the indexer and their delegators. See the last steps in Staking in the Protocol for instructions on setting the delegation parameters.
queryFeeCut - the % of query fee rebates accumulated on a subgraph that will be distributed to the indexer. If this is set to 95%, the indexer will receive 95% of the query fee rebate pool when an allocation is claimed with the other 5% going to the delegators.
indexingRewardCut - the % of indexing rewards accumulated on a subgraph that will be distributed to the indexer. If this is set to 95%, the indexer will receive 95% of the indexing rewards pool when an allocation is closed and the delegators will split the other 5%.

handleFoundingMembers() {
Graph Protocol, Inc. was founded April 2018 by Jannis Pohlmann, Brandon Ramires and Yaniv Tal
Jannis Pohlmann, Tech Lead & Co-Founder. Linkedin.com | Twitter
Brandon Ramirez,  Research Lead & Co-Founder. Linkedin.com | Twitter
Yaniv Tal, Project Lead & Co-Founder. Linkedin.com | Twitter | GRTiQ Podcast

handleGraphFunding() {
According to Crunchbase.com, The Graph has raised a total of $69.6M in funding over 7 rounds. Their latest funding was raised on Jan 21, 2022 from a Venture - Series Unknown round.
The Graph is funded by 27 investors. Blockwall Management and FinTech Collective are the most recent investors.
The Graph has raised a total of $205M in a single venture fund, The Graph Ecosystem Fund. This fund was announced on Feb 18, 2022 and raised a total of $205M.

handleWhatIsTheGraph() {
The Graph $GRT is an indexing protocol for querying networks like Ethereum and IPFS. Anyone can build and publish open APIs, called subgraphs, making data easily accessible. In short, The Graph provides data that can be transformed, organized, and shared across applications for anyone to query with just a few keystrokes.
How The Graph is Governed
The Graph Council
The Graph Foundation
Graph Advocates­DAO
You can read 'The Graph history (2017–2020)' made by the Graphtronauts, here.
You can read 'What is The Graph and why is it the next big thing in the technology industry' made by the Graphtronauts, here.
For a video explanation of what the 'google of blockchains' is, see here.

handleAirdrop() {
Regarding airdrops, The Graph is one of very few projects that actually made people work for their tokens. The curator program was very intensive and people spent significant time learning about subgraphs, organizing data, and contributing to the network. This puts the team in an incredible position of having a well trained and incentivized community of builders dedication to growing Web3 on The Graph. At this point in time, there are no airdrops planned

handleFreeGRT() {
CoinMarketCap Earn 
Coinbase Earn giving away free GRT tokens for participants that learn about the network and answer questions.
Psst! The best way to earn free GRT is by delegating and earning rewards.

handleGitHub() {
You can find The Graph Github address here: 
github.com/graphprotocol/

handleRoadMap() {
The Graph Official R&D Roadmap can be found here.
The Graph Roadmap for 2023 written by The Graphtronauts can be found here.
In this article you will learn four areas of development that will see the light of day in 2023 and make The Graph network even stronger than it is today:
The Sunset of the Hosted Service
Firehose
Substreams
Moving the protocol to L2 with Arbitrum One

handleWhatIsSchema() {
The graph uses GraphQL, an open source query language developed by Facebook. Each element in the schema has a description. Learn GraphQL and you can then retrieve all the data that you want from the blockchain.
GraphQL is a query language and server-side runtime for application programming interfaces (APIs) that prioritizes giving clients exactly the data they request and no more. GraphQL is designed to make APIs fast, flexible, and developer-friendly. GraphQL API is the API developers can use to access the indexed data by The Graph.

handleBuy() {
You can see the price and all open markets on CoinMarketCap.

handleDecentralisedData() {
The Sunrise of Decentralized Data
The Graph ecosystem is taking steps to deliver on user expectations while also welcoming the vibrant, decentralized future. To achieve this balance, the discontinuation of hosted service support is divided into three transitional phases on a per-chain basis that are dependent on various exit criteria—including but not limited to usability, stability, and core functionality.
Hosted service chains will transition gradually, permitting developers adequate time to familiarize themselves with the decentralized network and migrate their subgraphs.
In order to better support developers, specific dates will not be assigned for each phase in transitioning chains from the hosted service and onto The Graph Network. Addressing developer needs and achieving key exit criteria supersede ending hosted service support. As exit criteria are reached per hosted service chain, that chain will transition in three phases. Look to the progress of the MIPs program to understand when chains are being tested by Indexers, when they become supported on the network and when migrations have begun per chain.
For each hosted service chain, the three transitional phases in enabling support on The Graph Network are:
Phase 1 (The Sunray): Disable new hosted service subgraph creation for blockchains that have sufficient core functionality on the network.
Phase 2 (The Sunbeam): Disable hosted service subgraph upgrades.
Phase 3 (The Sunrise): Disable querying of hosted service subgraphs.

handleVsSelfHosting() {
The Graph Network vs. Self Hosting
Spoiler Alert: The Graph Network is less expensive, easier to use, and produces superior results compared to running a graph node locally.
The Graph’s decentralized network has been engineered and refined to create a robust indexing and querying experience—and it’s getting better every day thanks to thousands of contributors around the world. The benefits of this decentralized protocol cannot be replicated by running a graph node locally. The Graph Network is more reliable, more efficient, and less expensive. Here is an analysis:
Why You Should Use The Graph Network
60-98% lower monthly cost
0 infrastructure setup costs
Superior uptime
Access to 168 Indexers (and counting)
24/7 technical support by global community
To read a breakdown down of the benefits of using The Graph Network, read here.
No Setup Costs & Greater Operational Efficiency</strong>Zero setup fees.
Get started immediately with no setup or overhead costs.
No hardware requirements.
No outages due to centralized infrastructure, and more time to concentrate on your core product.
No need for backup servers, troubleshooting, or expensive engineering resources.
Reliability & Resiliency - The Graph’s decentralized network gives users access to geographic redundancy that does not exist when self-hosting a graph node. Queries are served reliably thanks to 99.9%+ uptime, achieved by 168 Indexers (and counting) securing the network globally.

handleSubgraph() {
Subgraphs are data structures to organize data that you pull from a blockchain. They are a way to define which data you want to get indexed and how to store it. Some of them do pre-aggregations or calculations on their mappings, some just store plain data similar to what you could find on-chain. Then, an entity queries that data. This entity could be a dapp (company/developer, etc), or could be a telegram bot, or a discord bot or even a simple user doing a query to find information.
Querying subgraphs from the hosted service is currently free to use for everyone. For the decentralized protocol, the team expects the query costs to be somewhere around $0.00001 per query, but it’s a free market, and every indexer can set its own cost models.
A developer’s cheat sheet for getting up to speed with subgraphs in 15 minutes can be found, here.
A tutorial for Building a Subgraph with the Subgraph Studio can be found here.
For an overview and step-by-step guide on building a subgraph made by Camila Ramos, see here.
you are looking for a subgraph or would like to explore the ones that have been migrated to mainnet, visit Graphtronauts app.
You can also enroll on the Subgraph Developer Course.

handleIndexerQs() {
You need 100,000 GRT to become an indexer and the necessary infrastructure. It is the minimum amount you need to stake in order to register an indexer node on-chain.
Indexers need extensive DevOps skills and the necessary hardware.
Indexers are “punished” for changing delegation parameters by the market. All other things being equal, the team would expect Indexers who set lower cooldown periods to receive less delegation.
  The team would also like to build tools that make it easier to spot Indexers that change delegation parameters erratically or too frequently. Some of these signals could be incorporated into a future version of the explorer.
You can’t change your indexer address in the next two years, starting December 2020

handleGas() {
Gas is the term for the amount of ether (ETH) – the native cryptocurrency of Ethereum – required by the network for a user to interact with the network.
The gas price is not something that The Graph team has control over. Gas price goes up when the Ethereum network is congested or heavily used.
For the average cost of a delegation transaction at this time, visit the Graphtronauts app here  and select Fees.
For a guide on How to reduce the cost of gas for delegating your GRT tokens, see here.
For Ethereum gas fees see here.

handleIndexerMap() {
To see a map of all indexer locations, visit Graphtronauts app and select Map.

handleIndexerCompare() {
To compare indexers, visit the Graphtronauts app and select List.
Click the Compare button and then select up to five indexers that you would like to compare.
Once you have selected, click the Compare Button below.

handleGraphSocial() {
Graph Social
An international web3 meetup driving The Graph ecosystem growth. Organized by Ahmad Mardeni.
The first Graph Social web3 meetup was in Dubai on 8th October 2022, 6-10pm GST, with more than 100 people in attendance. The event covering what The Graph is, what are the recent achieved milestones, and how to get involved!
Speakers
Ahmad Mardeni
Salim Hadri
Shing Lam from OOKC Labs
Isabella from Router Protocol
Farhaj Mayan from Buildspace
Paresh Dudhat from Infy Protocol
Rashmi Padhy
Sponsors
Tenderize
OOKC Labs
You can watch an interview from the event with Ahmad Mardeni and MultiArt Studio below!

handlePodcast() {
What is GRTiQ?
GRTiQ generate market intelligence through analytics, research, optimization, and education.
Market Analytics - They provide market performance and analytics so Delegators can better understand market dynamics.
Indexer Research - They conduct indexer research that Delegators can use to identify opportunities and partnerships.
Rewards
Optimization- They create and publish data, guides, and analysis to help Delegators optimize their rewards earnings.
 Ecosystem Education-They offer ongoing educational resources and information about all aspects of The Graph ecosystem.
You can listen to the GRTiQ Podcasts, here.
To keep up to date with GRTiQ you can follow them on Twitter, YouTube and Instagram.

handleAdvocates() {
The Graph Advocates is a community-driven initiative serving as a portal into web3 for people all across the world. Advocates have the unique opportunity to learn and contribute to The Graph community and web3 mission. Anyone can become an Advocate and subsequently join the Graph AdvocatesDAO.
Advocate Roles
Event Evangelist - Host local events, attend regional events, and participate in in-person or online community events.
Content Creator - Create content about web3 and The Graph, including articles, videos, infographics, memes or GIFs.
Text Translator - Translate The Graph and other community documentation, material, and social posts into other languages.
Community Care - Post answers to questions or share educational resources in The Graph Forum, Telegram, Discord, or Reddit.
Technical Teacher - Teach others how to actively participate and contribute in web3 and The Graph ecosystem.
Web3 Welcomer - Accelerate greater education and adoption of web3 and The Graph throughout the world.
You can apply to be an Advocate for The Graph here.
To learn more about what it takes to be an Advocate see here.
To learn about the AdvocatesDAO Grants, click me!

handleAdvocateGrant() {
Graph AdvocatesDAO Community Grant
You can apply for an AdvocatesDAO grant here.
The Grant Process
Initial Review - Your grant will be posted in the Graph AdvocatesDAO Forum here. A DAO member of the Grant Committee will evaluate eligibility of your grant.
Public Discussions - The broader community is invited to provide feedback on grants and also vote in the Forum on whether they support it. During this process, community members or DAO members may ask questions in the Forum to gather more specifics about the grant to better understand its scope. This is an important phase of the process throughout which opinions are formed.
Committee Presentation - A successful grant application will also include a live presentation to the Grant Committee of the DAO. These meetings take place in the public-voice-chat of the DAO's Discord server and are scheduled at three different time slots (10:00 | 18:00 | 22:00 UTC) every Tuesday to accommodate different time zones across the globe. These are important touch points for Grant Committee members to gain confidence on whether or not to support a grant. Please come prepared to present an overview of your grant and answer questions.
Grant Decision - You will see a number of different votes and polls emerging throughout the grant process. These are incredibly important signals that inform DAO members in their vote. The official DAO funding decision for successful grants will take place at the very end of the process, where all DAO members will vote on-chain in DAOHaus. (note: some smaller grants may be voted off-chain by the Grant Committee)
Expected Timing - The DAO is committed to appropriately vet all grant applications. The DAO has also established on-chain and off-chain timelines that allow broad engagement from the community living across different time zones with varying degrees of availability to participate.
So you have now submitted your grant via the form, it has been posted into the forum where the community and Advocates are voting and asking questions. What is next?<hr></hr>The DAO is aiming to process a successful grant application within 1-2 months. Below is an overview of key steps that a successful grant application passes through:
Community Review: ~10 days (varies by community engagement)
Committee Presentation: ~7 days (includes allowing time for scheduling)
Committee off-chain voting: ~7 days
 The voting period has ended and your grant has been successful. If so, Congratulations! What to expect:
Email Confirmation</strong> - This is from the Graph AdvocatesDAO, you will be required to complete KYC (Know Your Customer) via the link within the email. You will also be sent a Contract Agreement.
Forum Post - An Advocate will also comment on your grant within the forum to confirm you have been successful with your grant.
KYC & Grant Agreement: ~7 days
On-chain voting: 14 days
You will be able to see your on-chain grant proposal, here.  After the 14 days if you have been successful with the on-chain voting then you will be able to withdraw your grant.<hr></hr>To learn about withdrawing AdvocatesDAO grants, click me!

handleAdvocateGrantWithdraw() {
Withdrawing from DAOHaus
A guide on withdrawing your GRT from the DAOHaus app can be found here. Or you can watch the video tutorial below. If you need to move your funds from Gnosis Chain to Ethereum, you need to bridge your GRT, we suggest using OmniBridge, that you can access here. To watch a video showing how to use the OmniBridge to move your funds, you can watch it here.

handleGRTTokenAddress() {
Below you will find the GRT contract and its details, make sure to double check the information in order to avoid adding a malicious contract.
Name: The Graph
Symbol: GRT
Network: Ethereum (ERC20)
Contract: 0xc944e90c64b2c07662a292be6244bdf05cda44a7
Decimals: 18
You can check it out on CoinMarketCap, here.

handleUnDelegating() {
Whenever a Delegator wants to undelegate, their tokens are subject to a 26-day unbonding period. This means they cannot transfer their tokens, or earn any rewards for 26 days.
The undelegating/thawing period is there to avoid certain economic attacks from taking place. It has to coincide with the max allocation lifetime of 28 epochs. Given how the rewards system currently works, a shorter undelegating period would potentially allow delegation to be “double-counted” across multiple simultaneous allocations.<hr></hr>Whenever the indexer wants to force close them (manually), or automatically every maximum 28 epochs - max allocation lifetime. This is when rewards are distributed. 
One thing to consider as well is choosing an Indexer wisely. If you choose an Indexer who was not trustworthy, or not doing a good job, you will want to undelegate, which means you will be losing a lot of opportunities to earn rewards, which can be just as bad as burning GRT.
To watch a tutorial on Undelegating GRT Tokens from The Graph click here.
I can help you with documentation and tutorial on how to choose an Indexer.
Undelegation takes 28 epoches (not days).
Every epoch is 6646 blocks length.
Before ETH PoS every block was about 13 seconds length, for this reason 28 epoches were about 28 days.
13s * 6646b * 28e = ~28 days
Now every block takes about 12.06 seconds.
12s * 6646b * 28e = 26 days

handleCourses() {
The Graph Academy is all about education and learning more about The Graph. Their courses are designed to help you in getting started with The Graph and to broaden your knowledge about the ecosystem. And as a reward for learning more, you get a custom certificate.
Delegator Course
Subgraph Developer Course
Curator Course
To register a free account or to login as a guest, visit the course you are interested in and click on “Start now” and “Sign up”. There is a step-by-step  guide on how to do this.
If you would like to learn about Web3, just ask me! "How do I learn Web3 for free?"

handleLearnWeb3() {
Resources to learn Web3 Dev for FREE
Fast track your web3 career through courses, projects and code. Totally free. Find here.<
Ethereum
Solidity
A curated list of awesome Solidity resources, libraries, tools and more can be found  Awesome Solidity.
Blockchain
Oracles
CryptoZombies is an interactive school that teaches you all things technical about blockchains.
Put yourself to the test on SpeedRunEthereum.com.
Alchemy's Road to Web3 series, a 10-week, self-paced web3 developer program to help new blockchain devs go from beginner to advanced.
A completed guide to Web3 and Blockchain stack Twitter thread by Suhail Kakar can be found here .
If you prefer to learn by watching video tutorials then there is no-one better to learn from than Nader Dabit. You will find 'The Complete Guide to Full Stack Web3 Development' tutorial below, be sure to check out the rest of his YouTube channel for more Web3 learning content.

handleWomenInWeb3() {
Eva Beylin has been the director of The Graph Foundation since Oct 2020. She is an investor in, and supporter of, core Ethereum technology through eGirl Capital and is leading the grwoth of The Graph. She is one of CoinDesk’s Most Influential 2022, read the full blog here. She has led the distribution of over $135 million in grants to The Graph's core developers and the foundation's $50 million capital, led by Tiger Global. Watch her talk at Graph Day 2022 about Our Decenralization Journey, here. She made Forbes 2023 30 Under 30. You can get to know Eva by watch an interview, here.
Tegan Kline has been the Co-Founder and Head of Business at Edge & Node since 2021. After raising $22.5 million to help The Graph build an open source tool that lets ethereum developers understand how their products are being used, she co-founded Edge & Node to help monetize the project. Edge & Node was originally funded with an 8% stake of the GRT token, which is now worth about $650 million. Kline has also led Edge & Node's investments into projects adjacent to The Graph, totaling $3.1 million in 2021. She made Forbes 2022 30 Under 30. You can get to know Kline by visiting her website, here. Watch an interview with her, here. Or you can listen to a GRTiQ Podcast here .
Reem Chahrour has been the Ecosystem Manager at The Graph since 2021. For anyone who has applied for a Graph Grant, or followed the work of any grantees, then they have already encountered Reem. She's an important asset to The Graph community and her work covers a variety of important initiatives. You can listen to her on the GRTiQ Podcast, here. She talks about her entry into crypto and her work at The Graph Foundation, her advice for those seeking to apply for a grant (and where the foundation would like to see more submissions), the difference between the RFP and Grants programs, and the soon-to-launch Graph Advocates program.
When anyone mentions an Indexer they use the male pronouns. “He closes his allocation”. Wanting to highlight Women in Web3 working on Indexer Teams or running their own Indexer within The Graph ecosystem the Graphtronauts conducted a series of interviews with Women of Web3.
Women of Web3 - Ana from GraphOps
Women of Web3 - Anna from Citadel.One
Women of Web3 - IIinca from Chainode Tech
Women of Web3 - Gabi from Stake2Earn

handleDiscord() {
Below you will find the <strong>Official</strong> Discord servers.
Graph Protocol
Graph AdvocatesDAO
Below you will find the <strong>Un-official Discord servers.
Graphrica

handleTelegram() {
Below you will find the Official Telegram group.
The Graph Official Community
Below you will find the Un-official Telegram groups from all over the world.
Graphtronauts
The Graph – Germany
The Graph – French
The Graph – Español
The Graph – Russia
The Graph – Italia
The Graph – Turkey
The Graph – Brasil
The Graph – Vietnam
The Graph – Persian
The Graph – Indian
The Graph – Japan
The Graph – Dutch
The Graph – Arab
The Graph – Korea
The Graph – Pakistan
The Graph – Indonesia
The Graph – Bangladesh
The Graph - China

handleTwitter() {
Below you will find the Official Twitter page.
The Graph

handleTokenEconomics() {
Graph’s token economics are quite complex. Aside from a token issuance schedule and a token burn mechanism, The Graph Protocol unlocks vesting tokens during a 5 to 10-year time span.

Total Token Supply = 
Initial Token Supply + 
Annual Issuance – 
Annual Burn

Annual Issuance formula is as follows:
networkGRTIssuance = 1000000011247641700
blocksYear = 2628000
Inflation = networkGRTIssuance * (10^-18) * blocksYear - 1
Inflation = 0,0299999999792... = 3% approx

GRT Token Economics Overview

Token Symbol
GRT
Token Name
Graph Token

Initial Token Supply
10 billion GRT

Annual Issuance
~3% (for year 1)

Annual Burn
1% of query fees & taxes
You can read all about the token economics of The Graph here.
handleSunsettingHostedService() {
Clarifying the path forward for the hosted service
The hosted service will not abruptly end support for all chains. The hosted service will remain free-to-use on a per-chain basis, until core functionality is reached for each chain.
Subgraph developers will not be shut off from an essential service they rely on in production.
To elaborate (and to make a correction) on the original announcement that estimated the sunsetting of the hosted service to occur by the end of Q1 2023:
The transition process only applies to chains once they are supported on The Graph Network (which only includes Ethereum mainnet at the time of this writing, with Gnosis Chain coming soon).
The process is driven by specific exit criteria and Indexer readiness via the MIPs program, not dates any longer—developers should not expect chains to undergo deprecation phases until the necessary quality of service, core functionality and developer experience are offered on the decentralized network.
Subgraph developers should not be concerned that support for their chain will be arbitrarily or quickly discontinued. Additionally, there is a growing community of support to hold your hand throughout the migration process. Core developers are also continuing to work on improvements to the billing process for query fees, cost of queries, quality of service, and the overall developer experience on the network. The Graph’s core contributors acknowledge developer concerns about migration and are working on solutions to create a more seamless network experience.
Feedback is always welcome via The Graph Discord, The Graph Forum, and by contacting migration@thegraph.foundation. Core devs and contributors are actively listening to users and incorporating changes to suit their needs.
Announcing plans to discontinue the hosted service without addressing user needs or providing an abundance of context was the wrong move. The Graph ecosystem is shifting course to make sure the voices of people depending on The Graph are heard and understood.
After nearly 4 years of supporting subgraphs for web3 dapps, the hosted service will be sunsetting in Q1 2023 with dapps migrating to the decentralized network. The hosted service was critical to The Graph’s decentralization journey, achieving product-market-fit and testing subgraph features with developers. Sunsetting the service is the greatest milestone since The Graph Network launched, and will enable all web3 applications to retrieve blockchain data in a truly decentralized way.
For the Official documentation visit, The Graph Foundation - The Road to Sunsetting the Hosted Service.
For an easy to digest, in-depth Twitter thread made by Ahmad Mardeni, see here.

handlePowerDAOS() {
Using The Graph to Power DAOs: Snapshot Case Study
The Graph is a crucial protocol for enabling DAO members to accurately and easily read that data, while also making it effortless to track votes. Decentralized Autonomous Organizations, or DAOs, are organizations that are run by distributed communities, in contrast to centralized authorities. Because the bulk of decision-making in DAOs relies on on-chain data recorded on blockchains.
Snapshot is a decentralized governance protocol that enables people to coordinate and make collective decisions about the future of the organizations they participate in. Snapshot makes it possible for people to easily create and vote on proposals without incurring any gas fees. It’s a widely used tool for thousands of people working on protocols, collaborating in DAOs, and building innovative new projects in web3.
So far, Snapshot has recorded more than:
8.5M off-chain votes
8K protocols integrated
64.8k proposals.
Read here, to find out how The Graph Powers Snapshot and How to Supercharge your Dapp.

handleTenderize() {
During Graph Day Tenderize were given a shoutout as the first liquid staking protocol. Users can deposit $GRT for tenderGRT (tGRT), which automatically compounds rewards and swap back and forth at will. $GRT holders can delegate through Tenderize, giving them tGRT. A tokenized version of the staked position that automatically compounds rewards and that can be instantly swapped back to GRT.
You can read a guide wrote by the Graphtronauts on How to use Tenderize Tokenized Stake for your GRT, here.
To get started, visit Tenderize.
You can also read the Tenderize blog  here.

handleCommunity() {
The Graph now reaches even more people in their primary languages thanks to the help of talented translators.
To find out more about the GRT community, see below.
Community
23 Ways to Participate in The Graph Ecosystem

handleGeo() {
Geo is a web3 decentralized browser built on The Graph, the pages are open and curated by the community. So you can vote on what is valuable and your vote counts. Geo is solving all the problems we currently have with our web2 browsers and it is opening a new window of innovation, a new internet where your privacy is the top priority. You do not have to know anything about crypto or blockchain to be able to use it. This is an experience to onboard the next 1B users to web3.
Geo is in beta and it is only supporting iPad and Mac devices at the moment, signup for the beta waitlist  here.
To read a full blog about Geo created by Ahmad Mardeni see here.
Geo Genesis
Yaniv - Five years ago, a group of us saw the activity happening around Ethereum and decided to contribute by building The Graph. I saw The Graph's potential to be a global decentralized knowledge graph of all the world’s public knowledge and information. By using public infrastructure to organize and serve information, we could have better open and fair processes for influencing what information is considered the truth. Today we have a vibrant decentralized network and The Graph is solving the critical problem of efficiently accessing blockchain data for thousands of developers, but we still need to go a step further to see the full vision come to life.
I’m excited to share that we’ve spun out a separate company called Geo that I will be leading alongside some very talented engineers and designers. This is the very beginning of this journey and building Geo into its full form will undoubtedly take a lot of experimentation, iteration, and collaboration.
You can read the full blog, here.

handleSubstreams() {
StreamingFast is a protocol infrastructure company that excels at building highly scalable, cross-chain architecture for streaming blockchain data. The $60M Core Dev Grant is the first of its kind, pioneering a new frontier of collaborative innovation where communities and companies are aligned to build a radically more open Internet.
StreamingFast will contribute its technology, developer talent, and resources to advance The Graph as a protocol and ecosystem. Relevant IP and products will be open-sourced under The Graph Protocol Github repo and API products will migrate to The Graph Network for backend indexing and querying support.
The Graph Foundation Awards $60 Million Grant to StreamingFast to join The Graph as a Core Developer Team, read here.
Substreams is a powerful blockchain indexing technology, developed for The Graph Network. It enables you to write Rust modules, composing data streams alongside the community, and provides extremely high performance indexing by virtue of parallelization, in a streaming-first fashion. It has all the benefits of the Firehose, like low-cost caching and archiving of blockchain data, high throughput processing, and cursor-based reorgs handling.
To find documentation on SubStreams here.
Or you can read the blog from The Graph about Substreams: Massively Faster Indexing Performance for Subgraphs.
Join the StreamingFast Discord server or check them out here.

handleGraphtronauts() {
A community for Delegators, Built by Delegators.
The Graphtronauts are a group dedicated to facilitating the chat for those who wish to HOLD $GRT and talk about the fundamentals of The Graph project. Not only are they the largest non official community of long term $GRT holders for The Graph ecosystem, their goal is to help people in their journey to become a delegator for The Graph.
'We rise by lifting others' - Graphtronauts | Founded 16th January 2021
Learn more about the Graphtronauts by listening to this GRTiQ Podcast with Baghe and Chris Ewing.
And this GRTiQ Podcast with Paolo Diomede.
You can join the community via the following links
Telegram
Twitter
Graphtronauts App
Website
YouTube
Reddi
The Graphtronauts Indexer (graphtronauts-indexer.eth) is now live and ready for delegations! See the Tweet below for more information, join their Discord and follow on Twitter for updates.

handleDelegateWithWallet() {
If you would like to delegate GRT via Metamask. If you haven’t already, download MetaMask. If you need help with this, you can find a guide here.
You can watch a step-by-step video tutorial on delegating GRT to an Indexer here.
If you would prefer to follow the text guide, you can read that here.
You can use  WalletConnect to delegate on The Graph Protocol.
You can find a step by step guide on how to do this here.
Instead of Metamask’s soft wallet, you can also use a hard wallet, such as Ledger, to delegate your GRT. Hard wallets can add another layer of security as they typically require physical device confirmation of transactions. You can connect Metamask to your hardware wallet via the Metamask Browser Extension. Make sure to have the ETH app open on your Ledger device and to have Contract Data allowed within the ETH app on your device.
To delegate your GRT tokens using a hardware wallet connected to MetaMask, read a tutorial here.

handleCurator() {
Curators do not need to possess complex technical skills or knowledge. All it takes is the ability to do transactions via MetaMask. Similarly, Curators are not required to stake a minimum required amount of GRT, unlike Indexers. Curators should have an understanding of the Web3 ecosystem trends and see if a subgraph is providing useful information. It is also helpful for a Curator to be able to identify critical issues that could mean a subgraph is broken.
The following guides will give you all the info you need to know prior to signalling a subgraph and how to do it with confidence.
This Curator guide on 'Tips and Tricks to evaluate and determine if a subgraph is legitimate' is the best place to start. Once you have read the guide and watched the tutorials below, you will be in a great position to signal your first subgraph.
This guide also made by PaulieB on 'Curation. A short and sweet guide explaining what it is, how to do it, and helpful resources to help you become successful.'
Join $GRT Curation Station, a community created by Curators, for Curators. You can seek further help here if needed.
The following video tutorials were created by DataNexus about Curation:
What Is A Curator For The Graph
Verifying a Subgraph
How to Signal a Subgraph
Signal Transaction Failure
If you want some helpful Curator tools, then just ask.

handleCuratorTools() {
Helpful Tools for Curators
Learn how billing works on the Subgraph Studio, here.
>Learn how The Graph to use Polygon for its billing system, here.
Check the Indexing status of a Subgraph
You can see data for:
Mainnet Query Fees (Daily)
Mainnet Query Fees (Monthly)
Mainnet Query Fees (Monthly, 30 Day Moving Average)
New Subgraphs (Monthly)
Total Subgraphs
Average Subgraph Fees (Monthly, 30 Day Moving Average)
Subgraph Query Fees (30 Days)
Query Fee / Signal Ratio (30 Days)
Subgraph Query Fees (30 Days) - %
here.
Or check the Billing of Subgraphs, here.
Graph Network 
Billing Dashboard
Graph 
User Billing Balance

handleHostedService() {
The hosted service has been instrumental to getting The Graph to where it is today, but the vision has always been to create a decentralized indexing protocol and global API. When The Graph Network goes live, developers will finally have the ability to offer truly serverless decentralized applications that are fast to load and dependable. There will be no need for centralized infrastructure as applications can connect directly to an efficient network of Indexers to process queries.
Ethereum subgraphs continue to migrate to The Graph’s decentralized network. As web3 adoption grows, so does demand for scale and performance. Developers are faced with a major decision: to continue to rely on centralized tech or to switch to decentralized infrastructure.
For longevity and reliability, nothing beats decentralization. By eschewing centralized points of failure, you are offering your users a web3 app they can access consistently. Many projects have already validated the network in production and now is the perfect time for your project to migrate over.
To learn more about The Graph Subgraph Migration, see here.
If you are looking for a step-by-step guide on how to migrate a subgraph from the hosted service to mainnet, see here. If you prefer video tutorials then see below.

handleChainlink() {
The Graph is an indexing protocol for querying networks like Ethereum and IPFS. Anyone can build and publish open APIs, called subgraphs, making data easily accessible.
Chainlink is a decentralized oracle network that enables smart contracts to securely access off-chain data feeds, web APIs, and traditional bank payments.<hr></hr>Here is a video explanation with Tegan Kline and Dave Kajpust of The Graph Protocol. They discuss The Graph's vital importance to building a decentralized Web3 and explain the differences between Chainlink and the Graph.

handleIndexerOfficeHours() {
Indexer Office Hours is an informal drop-in clinic for anyone to get advice on their Indexer deployment whether it be on Mainnet or Testnet. If you would like to get more eyes on a troubleshooting issue, or even just want to ask questions about indexing, then this is the clinic for you.
You can catch up on all Indexer Office Hours here.

handleFireHose() {
Processing data through Firehose (developed by StreamingFast), increases linear indexing performance and syncing speed, and maximizes data agility by enabling parallel processing. Firehose creates a generic interface for Graph Node with any blockchain and vastly improves the capability of handling high throughput chains like NEAR.
You can read the proposal of the Firehose to learn more about it, here.
Ask me about StreamingFast to learn more about them.

handleCoreDevs() {
The Graph`s Core Developers are:
Edge & Node - Developing decentralized protocols and advancing web3. Initial team behind The Graph.
Figment - Improving node infrastructure and multi-blockchain support.
The Graph Foundation - Stewarding the ecosystem, issuing grants, and supporting the community.
StreamingFast - Optimizing subgraph indexing performance and supporting web3 development tooling.
Semiotic - Enhancing The Graph Network through AI innovations and R&D.
The Guild - Building subgraph tooling and developing GraphQL API improvements.
GraphOps - Extracting, transforming, and serving blockchain data via the Graph Protocol.
Messari - Bringing transparency and building tools for informed decisions and investment.
Core Devs
Catch up on all Core Devs Calls here.

handleFigment() {
Figment is a venture funded, registered Canadian company based in Toronto. Serving the world’s largest GRT holders. With 30+ years of experience successfully scaling internet infrastructure companies.<hr></hr><strong>Staking</strong>- Figment operates a highly secure network of Proof-of-Stake (PoS) validators that enable token holders to secure networks, participate in governance, and earn yield.
To learn more about Staking with Figment, see Software- Figment’s DataHub platform lets developers use the most powerful and unique features of a blockchain without having to become protocol experts, accelerating the development of new Web 3 applications.
To learn more about Figment’s DataHub platform, see here.
Capital- Figment Capital offers seed funding and growth support to new, highly innovative PoS projects.<hr></hr>Developers using subgraphs can easily monitor their subgraphs within DataHub. This helps developers to improve their subgraph performance and reliability.
DataHub, Figment’s Web 3 blockchain developer platform, integrates subgraph data from The Graph.
This makes it easier for developers to access more components of their Web 3 tech stack, all in one place.
You can read about Subgraph Linking on DataHub, here.
Figment’s core development team integrated The Graph with the Cosmos ecosystem. This integration allowed for the indexing and querying of Cosmos ecosystem data in a completely decentralized way powered by The Graph.
You can read about Bringing The Graph to the Cosmos Ecosystem, here.

handleSemiotic() {
Semiotic Labs is building automated decision-making tools for decentralized markets on the blockchain. They believe that the convergence of AI and cryptography will propel Web3, the decentralized internet of the future.<hr></hr><strong>Deep Reinforcement Learning (RL)</strong> is a field of AI that was used in mastering games like Go and in scientific discovery. Using Deep RL, they develop autonomous agents that can negotiate price and other terms in bilateral or auction type deals. Agents with prosocial behaviors can be trained to improve the welfare of the decentralized network.
Simulation environments are essential in training AI agents efficiently and testing their performance against benchmarks.
They develop realistic simulators to capture economics of decentralized markets and train multiple agents that participate in the network.
Simulation environments are also useful in stress testing new protocols to find weaknesses (e.g. adversarial attacks) before real world failures occur.
Homomorphic Encryption makes it possible to perform computations on encrypted data.

handleMessari() {
Messari contribute it's developer talent and domain expertise to develop and maintain high-quality, accurate, complex, and standardized protocol subgraphs. All subgraphs will be open source and available for the broader community. Each subgraph will be migrated to the decentralized network. Moreover, Messari will lead subgraph working groups, provide feedback to help inform core protocol efforts, share subgraph best practices, and help create community-wide standards for any protocol.
You can learn more about Messari's role within The Graph ecosystem here.

handleGraphQLApi() {
GraphQL API
This guide explains the GraphQL Query API that is used for the Graph Protocol.
Queries - In your subgraph schema you define types called Entities. For each Entity type, an entity and entities field will be generated on the top-level Query type. Note that query does not need to be included at the top of the graphql query when using The Graph.
Sorting - When querying a collection, the orderBy parameter may be used to sort by a specific attribute. Additionally, the orderDirection can be used to specify the sort direction, asc for ascending or desc for descending.
Pagination - When querying a collection, the first parameter can be used to paginate from the beginning of the collection. It is worth noting that the default sort order is by ID in ascending alphanumeric order, not by creation time.
Filtering - You can use the where parameter in your queries to filter for different properties. You can filter on multiple values within the where parameter.
Time-travel queries - You can query the state of your entities not just for the latest block, which is the by default, but also for an arbitrary block in the past. The block at which a query should happen can be specified either by its block number or its block hash by including a block argument in the toplevel fields of queries.
handleParticipantUpdate() {
The latest GRT Participant Update covers highlights from Q3 2022 of The Graph, including key stats, announcements and milestones. Watch the recording and learn about all the building and innovating happening within The Graph Ecosystem.

handleTheGuild() {
The Guild's advanced open source ecosystem covers everything you need for your API infrastructure with a modular, open source and complete platform.
The Ecosystem
Their advanced, modular solutions can be adopted gradually as individual open source libraries or as a complete unified API platform. Explore thier suite of sustainable, open source API tools that covers everything you need to scale your API infrastructure  here.
 You can learn more about The Guild here.
You can learn more about the services they provide here.

handleGraphOps() {
GraphOps are building the future of the web. Their mission is: We’re driven by the mission to build an uncensorable, equitable and self-sovereign web. Public data is at the heart of that mission, and we thrive on building open data standards & protocols to empower the next great wave of institutions and applications for our world.
GraphOps are a blockchain data infrastructure company. They extract, transform and serve blockchain data via the Graph Protocol.

handleGraphDay() {
Here is a recap on the most recent Graph Day that took place on 2nd June 2022 at the historic Palace of Fine Arts in San Francisco.
Visit Graph Day and  Graph Hack to learn more about the whole event.
The Graph community were able to join in and focuse on web3, dapps, protocols, and the future of the internet. The leading protocol and dapp developers showcased how the web3 community is pioneering brand new forms of human coordination.
Welcomed by Eva Beylin, Director of The Graph Foundation. Followed by an inspirational talk by Yaniv Tal, Co Founder of The Graph and CEO of Edge & Node. Next the community were treated to a Graph presentation about 'Why decentralization matters'. Then the exciting announcements rolled in, one after another:
Announcement of sunsetting the Hosted Service
Substream Announcement
GEO Launch Announcement
The community were then treated to a panel talk with Diana Chen, Camila Ramos, Chris Ewing and Derek Meyer. -"It takes a Village".
You can listen to the GRTiQ Podcast on the Graph Day and Graph Hack with Tegan Kline which took place just before the event, here.
See the future of the internet as it is unveiled live from The Graph Day 2022 Livestream below.

handleWhatIsTheWeb() {
The web has evolved a lot over the years, and the applications of it today are almost unrecognizable from its most early days. The evolution of the web is often partitioned into three separate stages: Web1, Web2, and Web3.
Web1 - Web 1.0 was the first iteration of the web. Most participants were consumers of content, and the creators were typically developers who build websites that contained information served up mainly in text or image format. Web 1.0 lasted approximately from 1991 to 2004.
Web 1.0 consisted of sites serving static content instead of dynamic HTML. Data and content were served from a static file system rather than a database, and sites didn't have much interactivity at all.
You can think of Web 1.0 as the read-only web.
Web2 - Most of us have primarily experienced the web in its current form, commonly referred to as web2. You can think of web2 as the interactive and social web.
In the web2 world, you don’t have to be a developer to participate in the creation process. Many apps are built in a way that easily allows anyone to be a creator.
If you want to craft a thought and share it with the world, you can. If you want to upload a video and allow millions of people to see it, interact with it, and comment on it, you can do that too.
Web2 is simple, really, and because of its simplicity more and more people around the world are becoming creators.
The web in its current form is really great in many ways, but there are some areas where we can do a lot better.
Web3 - There are a few fundamental differences between web2 and web3, but decentralization is at its core.
In web3, developers don't usually build and deploy applications that run on a single server or that store their data in a single database (usually hosted on and managed by a single cloud provider).
Instead, web3 applications either run on blockchains, decentralized networks of many peer to peer nodes (servers), or a combination of the two that forms a cryptoeconomic protocol. These apps are often referred to as dapps (decentralized apps), and you will see that term used often in the web3 space.
To learn more about Web1, Web2 and Web3, read here.

handleCoinbase() {
How to Delegate your GRT tokens with Coinbase Wallet
In this article it will teach you how to delegate your GRT tokens within The Graph protocol, using Coinbase Wallet.
To read the guide made by the Graphtronauts, see here. Or if you prefer to watch a video tutorial, you will find that below.

handleCryptocurrencies() {
The name is a combination, or a portmanteau, of cryptography and currency. Unlike traditional currencies (usually referred to as “fiat currencies”), which use physical bills and coins, cryptocurrencies are entirely digital. Just like any other currency, you can use cryptocurrency to purchase goods and services, and you can transfer it between friends and family worldwide. However, cryptocurrency has a few additional features that set it apart from traditional currencies.
When you deposit fiat currency into a bank, you are essentially lending your money to that bank and trusting them to give it back to you when you ask for it. While this does generally work well for both parties, the banks profit off your money by then loaning it out to others and collecting interest on these loans. Further, banks charge additional fees, such as withdrawal fees or monthly account fees, and can also have minimum balance requirements.
A traditional bank would be considered centralised, cryptocurrency is decentralised meaning it doesn’t have a single person controlling everything – in fact, there are thousands of people that help validate all of the transactions that occur on a blockchain – and that means you have a trustless environment, improved data reconciliation, and reduced points of weakness. That’s a wordy way of saying you control your own assets.
The increased privacy, security, portability, and transparency of cryptocurrency means there is no room for manipulating transactions, changing the money supply, or adjusting the rules mid-game. Cryptocurrencies aren’t an organization, they don’t control your funds; you can be your own bank.</a>

handleWhatIsABlockchain() {
Blockchain can be thought of as a record book that is used for tracking cryptocurrency transactions in the same way checkbook spending is tracked with a checkbook register. A blockchain is a system for recording transactions made with cryptocurrencies, such as ETH or Bitcoin. Transaction data is stored in a block of many transactions. After a block is full, a new block that references the previous block is created and chained to the previous block; hence the term blockchain.
Some blockchains, like Ethereum, are maintained using a peer-to-peer network of computers, allowing any user to host and access the blockchain from anywhere in the world. As a transaction occurs, it is recorded and distributed to each user's record book in the blockchain network.
These individual computers when used together form a global decentralized database to store all the blockchain data. Decentralized means that instead of the data being managed in one location and controlled by a single company or person, it is managed by everyone using the network.
Blockchains are designed to be immutable, meaning unchangeable. After something has been recorded to the blockchain, it can’t be changed or reversed. This means that any transactions on the blockchain are permanent, and a record of them will always be available for anyone to view. Decentralisation combined with the blockchain data structure creates a permanent timeline of events.
Some banks require you to contact them to see transactions that are older than a month in your account. Using the blockchain would eliminate the need to contact your bank because all your transactions will already be available for you to view.</a>

handleSafe() {
Is Crypto safe?
The safety of cryptocurrency is a hotly debated topic. On the one hand, proponents argue that cryptocurrency is more secure than traditional currency because it is not subject to government control or manipulation. On the other hand, skeptics claim that cryptocurrency is vulnerable to hacking and theft.
Ultimately, the safety of cryptocurrency depends on the individual user’s security practices and on the security of the cryptocurrency network. For example, if you store your cryptocurrency in a digital wallet that is not password protected, then it is at risk of being hacked.
Similarly, if the network is not secure, then your cryptocurrency may be stolen by cybercriminals. Thus, it is important to do your research before investing in cryptocurrency and to use caution when storing or using it.
To learn about the benefits and drawbacks of crypto, read here.
Is Blockchain safe?
Alongside cryptocurrencies that can’t be counterfeited or hacked, blockchain technologies offer incredible security in addition to their utility. The decentralised nature of blockchains and the inability to change the information within them aid blockchains in being resistant to tampering, hacking, and fraudulent transactions. With many distributed versions of the blockchain across the network, a hacker would need to gain control over countless computers to do any real damage. This makes hacking a blockchain nearly impossible.
Implementing blockchain technology to power the world allows for faster, more secure, and more transparent markets for everyone.

handleEthereum() {
Ethereum is a programmable blockchain technology developed by Vitalik Buterin beginning in 2013. Ethereum allows users to send and receive cryptocurrencies, access and create decentralized applications known as dapps, earn rewards through staking, and much more. Free access to financial services and a more private and decentralized internet are some of the key goals of the Ethereum foundation.
After its conception, Ethereum implemented a system of decentralised governance with no one person in control. This lack of ownership makes it almost impossible for governments or organizations to deny you access to services on Ethereum. Applications on Ethereum don’t require all of your personal details to use them. This gives users more control over their privacy and keeps them safer in every transaction.
Ethereum is open to anyone, anywhere as long as they have access to an Ethereum wallet, like the Loopring Smart Wallet. You can think of an Ethereum wallet as a banking app, without a bank that controls your funds. With only an internet connection, Ethereum is available for everyone to use, supplying access to banking services worldwide.
The peer-to-peer network of Ethereum eliminates the need for a middle man and allows users to interact directly with each other for payments, and other agreements. Thanks to smart contracts, users have a built-in guarantee that deals will go through only if both sides provide what was agreed on.
All transactions on the Ethereum blockchain are powered by the native cryptocurrency ether, or ETH. Whenever ETH is sent or a dapp is used, users pay a small fee in ETH for using the Ethereum network. These fees are used to help reward miners for verifying actions on the blockchain. Miners act as record-keepers making sure that no one is cheating or manipulating the blockchain, and keeping it secure. This is known as proof of work. The future of Ethereum brings a new method of securing the blockchain in which funds are committed, or staked, to allow users to act as record-keepers for the blockchain. This is known as proof of stake.
To learn more about Ethereum, read here.

handlePOW() {
Proof of Work (PoW) is a consensus algorithm for most major cryptocurrencies; it is one way to secure a cryptocurrency’s ledger. PoW was introduced by Satoshi Nakamoto for the Bitcoin blockchain making it the first consensus algorithm, and it remains the dominant one to date.
It wasn’t the first time we’ve heard of PoW though, Adam Back’s Hashcash app was invented in 1997 and used a proof-of-work function. One of the great benefits of this system is it prevents double-spending. This term is used almost exclusively for digital money and cryptocurrency because you can’t spend the same physical cash twice, that is; if you went to a store and paid cash for a drink you couldn’t use that same cash at a different store because the first store locked the money up in the cash register.
In cryptocurrency or any digital money, it's possible to send lots of data around rapidly and without validation, you’d have people that could spend fast enough to trick multiple stores into believing they got paid and the ledger would be ruined quickly. On a small scale, this might work, but when 10s and 100s of thousands of people are trading on a blockchain it gets messy fast.
It would be tiresome and inefficient to add all the transactions one at a time with so many people wanting to trade, so these transactions get lumped into a block that links to the previous and references it – thus the name Blockchain. Adding to a block isn’t free though, there are users called miners that help validate each block of transactions. This costs computing power, and real-world energy, to create a hash (think digital fingerprint) that is virtually impossible to reverse.
Because of the high computing power, miners are paid a fee for their services, and the blocks are submitted to the chain. With the power of the cryptography in PoW, if you try to make an invalid transaction it will be automatically rejected by the network and you’ll still pay the miner fee. That is the beauty of it: it becomes expensive to attempt invalid transactions but is profitable to act honestly.

handlePOS() {
Much like Proof of Work, Proof of Stake (PoS) is a consensus algorithm that is based on the number of coins being staked. Staking refers to committing funds to the system in order to be a block validator; validators can only participate in the process of producing new blocks if their coins are locked. The funds then act as collateral, meaning a malicious validator would lose their staked funds and lose access to the network.
PoS is an alternative to PoW that comes with certain advantages and disadvantages. In Proof of Work only the miner is rewarded and everyone is competing to be the one that submits the valid block, thus wasting a lot of energy. The Proof of Stake model achieves consensus by considering staking size and how long they’ve been staked, then selecting the validator which saves considerable amounts of energy and time.

Pros
Cons
Efficiency: There is very little energy used to secure a blockchain.
Scale: There has yet to be a PoS system to reach the size of Ethereum or Bitcoin.

Throughput: You don’t have complex computer problems to solve, so transaction speeds are increased.
Less Secure: Participating in a PoS system can incentivize hoarding coins to have a 51% attack. In large enough blockchains, this becomes much less likely.

Lower Entry Level: You only ever need to spend money once to participate in a Proof of Stake model. A PoW system requires hardware equipment and continuous uptime.
Centralisation: There is an incentive to hold more tokens for staking. Some blockchains have started punishing this and incentivising smaller validators.
handleCoinOrToken() {
Coin
In cryptocurrency, the term ‘coin’ is used when describing a currency that is native to its own blockchain (e.g., Ether for the Ethereum blockchain, Bitcoin for the Bitcoin blockchain, etc…). A coin is a digital currency that may be used in a variety of ways:
As a form of payment (e.g., transferring ETH to another for an item or service), Store of value (e.g., some view Bitcoin as a ‘safe haven’ for one’s wealth), Unit of account (e.g., items such as NFTs may be priced in ETH) and for blockchains that use proof-of-work, the native coin is also used to pay the miners for processing transactions and producing blocks.
Token
While a coin is native to its own blockchain, a token is created on an existing blockchain. Each blockchain has its own format for tokens. For example, tokens created on the Ethereum blockchain have a prefix of ERC followed by a number (e.g., ERC-20). Technically, anyone can create a token, so researching and reading through the tokenomics is always recommended before purchasing.
A token may be fungible (interchangeable) or non-fungible depending on the standard it uses. On Ethereum, some examples of token standards are:
ERC-20
Standard commonly used for fungible tokens, ones used for digital currencies, staking, and voting.
ERC-721
Standard used for non-fungible tokens, like an NFT for artwork or a song.
ERC-1155
Standard that allows for more efficient trades and bundling of transactions. It can represent and control any number of fungible and non-fungible token types. Meaning, the ERC-1155 token can perform the same role as an ERC-20 and ERC-721 token, and even both at the same time.

handleStablecoin() {
A stablecoin is a cryptocurrency that is designed to maintain a consistent market price. While the exact mechanisms may vary from one to another, stablecoins are somewhat resistant to market volatility. They shouldn’t experience significant price changes as their values are often pegged to another asset like the US Dollar.
The main idea of using a stablecoin is that you gain the benefits of both fiat and cryptocurrency worlds. You can hedge against the volatile nature of crypto markets and loan out your stablecoins to earn interest better than you would with a bank or broker.

handleCEX() {
A centralised exchange (CEX) is a way to facilitate trades between users by maintaining an order book; a collection of buy and sell orders that are placed by individual investors. The orders are to buy or sell a certain amount of crypto at a specific price – a CEX will aggregate these orders and execute the orders.
A big difference between a CEX and personal wallets or a DEX is that users do not actually exchange crypto or fiat with each other. The funds are deposited and the exchange takes over custody of the assets and basically issues an IOU to the trader. There are upsides to this like lower fees and simpler swapping, but there are downsides like a shortage of transparency that enables malicious practices like wash trading and price manipulation.
Since all funds are held in custody by the exchange, CEXs are a prime target for potential hacks and they have been hit several times in the past few years for hundreds of millions of dollars. Additionally, because a CEX is hosted somewhere it’s possible to have technical issues or attacks that can lead to downtime. Funds can also be frozen and seized because of government regulations in some cases.
While a CEX will require Know Your Customer (KYC) to be conducted, it’s also useful for tax purposes to have this information readily available and most exchanges can easily provide tax documents for you. Having a CEX take custody of your funds has advantages if you’re not comfortable controlling them yourself. Some users have stored funds in their personal wallets and forgotten seed phrases or lost their private keys, losing millions of dollars worth of crypto.
Some examples of popular CEXs include Binance, Coinbase, FTX, Huobi, and Kucoin.
   
handleDEX() {
A decentralized exchange is a peer-to-peer marketplace where transactions go directly between traders. This is core to crypto’s values of being decentralised – no transactions are fostered by officiated banks, brokers, or any other intermediary. There are a few popular DEXs like Uniswap and Sushiwap that run on Ethereum L1.
The biggest difference between a centralised exchange (CEX) and a DEX is that a CEX will allow exchanges between fiat and crypto whereas a DEX cannot. A CEX will allow for margin trades and setting limit orders that are handled by the order book – this is similar to stock exchanges like Nasdaq.
A DEX is built entirely on smart contracts. They establish prices of cryptocurrencies algorithmically and use liquidity pools (LP) to facilitate trades that are settled directly on the blockchain. A DEX is normally built on open-source code, meaning there isn’t anything being hidden about how it functions.
You’ll find more variety on a DEX, DeFi is the place to be for getting in on early token LPs. This ranges from well-known tokens to random and sometimes useless ones, be sure to do your own research when investing. That said, the risk of hacking is drastically reduced because the funds on a DEX are stored in personal wallets and not a central store; there have been several hacks on CEX’s over the years.
A CEX will require KYC (Know Your Customer) to identify you, a DEX will not require any personally identifiable information so you remain anonymous. Additionally, while some locations will be restricted from allowing crypto purchases, a DEX opens up the possibility to the people in these regions.

handleLayerTwo() {
Layer 2 (L2) refers to a secondary framework or protocol that is built on top of an existing blockchain. The main goal of a L2 protocol is to help solve the transaction speed and scaling difficulties of major cryptocurrency networks, for Ethereum we call this the Ethereum Scaling Trilemma – Scaling, Speed, and Decentralisation.
Ethereum currently processes ~13 transactions per second, whereas credit card companies like MasterCard and Visa process over 1700 tps and charge a small fee. If you’re familiar with Square or similar services for small businesses, you would never imagine using just Ethereum to transact. Imagine trying to pay and waiting 20-30 minutes to validate the payment, not to mention you pay a gas fee for that validation; that’s where L2 steps in and there are a few ways to do it.
It’s faster, cheaper, and just as secure as Ethereum. So why doesn’t everyone do it? Well, Optimistic Rollups suffer from longer finality/withdrawal times, typically holding funds for 7 days. Validium and Plasma are off-chain and thus lack the true security of Ethereum. zkRollups are the best of all worlds in that they are fast and secure on-chain, but the technology required to develop them is very challenging.

handleZKProof() {
A zero-knowledge proof (zkProof) is being able to prove something to someone without conveying any additional information except for the fact that it's true. You don’t need to prove that you possess the knowledge of certain information by simply revealing it; the challenge is to prove possession of the knowledge without revealing the information itself.<hr></hr><strong>Applications</strong><br></br><br></br><strong>Finance:</strong> You can use zkProofs to allow customers to prove their secret number lies in a known range. As an example, a loan applicant can prove their income is in a qualifying range without giving away their exact salary.
Online Voting: A zkProof would allow you to vote anonymously and verify your vote was included in the final tally.
Authentication: You could sign into sites without exchanging secret information like a password.

handleSmartContract() {
A “smart contract” is simply a program that runs on the Ethereum blockchain. It is a collection of code and data that resides at a specific address on the blockchain; it is a type of Ethereum account. They can hold a balance and can send transactions over the network, but they are not controlled by a user. They are programmed to do exactly what they are told, defining rules and automatically enforcing them based on their code.

handleNFT() {
Introduced by Dieter Shirley in September 2017 and finalised in June 2018, the ERC-721 was designed for Non-Fungible Tokens. They are unique, no one token is exactly the same and they are assigned a uint256 variable called tokenId that must be unique. This could represent almost anything in the world that is unique that needs provable ownership:
Digital art (GIFs, Collectibles, Music, Videos)
A domain name
Deeds to a car
Tickets to a real-world event
Tokenized invoices
Legal documents
Medical records
Signatures
NFTs have special properties:
Each token minted has a unique identifier that is directly linked to one Ethereum address.
They're not directly interchangeable with other tokens 1:1. For example, 1 ETH is exactly the same as another ETH. This isn't the case with NFTs.
Each token has an owner and this information is easily verifiable.
They live on Ethereum and can be bought and sold on an Ethereum-based NFT market.
That means if you own an NFT:
You can prove you own it.
The token proves that your copy is the original.
Your private key is proof of ownership.
No one can manipulate it in any way.
You can sell it or hold it forever.

handleMining() {
Cryptocurrency mining refers to the process of verifying and validating blockchain transactions. Miners solve intense cryptographical equations and submit new blocks to the blockchain with this data. Honest and successful miners are rewarded a mining fee, this fee is referred to as a gas fee in Ethereum.
As new blockchain transactions are made, they get sent to a memory pool (mempool). The miner verifies the validity of the pending transactions and organizes them into blocks. This is similar to people submitting transactions orally to you and you write them all down on a piece of paper in order – the piece of paper in this metaphor is a block. This block needs to be confirmed; this requires complex mathematical problem solving and takes a lot of computational resources. Once successful, the block is submitted to the chain and the miner receives rewards.
To learn more about how mining works, see here.

handleNodes() {
Nodes are a piece of client software. There are 3 different types of nodes and they each consume data differently. Additionally, there are different sync strategies that enable faster synchronization time; synchronization is how fast you can get accurate information on Ethereum’s state.
Full Node
Stores full blockchain data.
Verifies all blocks and all states while participating in block validation.
All states can be derived from a full node.
Serves the network and provides data on request.
Light Node
Unlike a full node, light nodes only download block headers. These contain just a summary of information about the contents of the blocks. If there is additional required information, a light node can request it from a full node. This allows the light node to verify the data they receive against a state root in the block headers.
Light nodes are useful because you don’t need powerful hardware or high bandwidth to run them like a full node.
Archive Node
All information stored in a full node is archived into historical states in an archive node. If you wanted to query information from a random block like block #222,222 you would use this node. The data is obviously massive. Terabytes of data in an archive node can be less attractive for the average user but useful for services such as block explorers, chain analytics, and wallet vendors.

handleTokenBurn() {
Token burning means destroying a coin or token permanently, but why would you do this? Blockchain technology gives power to the users, you can be self-custodial – complete ownership of your assets. You don’t need a bank or financial institution, transactions aren’t limited by third parties, and in most cases, the supply is limited with the power to be deflationary because you can destroy tokens.
Burning a token specifically means you are sending a token to a frozen address, called the burn address, which cannot be recovered. A burn address will have no private key, there is a public address to send to but no keys to unlock the wallet. It is the equivalent of placing your physical money in an uncrackable safe of which no one has the passcode to unlock.
The value of a token is based on supply and demand. Usually, the higher the demand the higher the value. Likewise, if the supply is smaller the value is also higher. So when there is a fixed supply of a token there is an impact to destroying some of that supply. This can be used for a number of reasons like increasing token value or producing value stability.
Increase Project Value
Corporate buybacks are commonplace in today's growing financial world; companies buy back some of their own stocks and shares from the market to help increase the value of the remaining supply. A similar event happened in 2021 when Ethereum bought back and then proceeded to burn 1.3 million ETH that was in circulation. The goal is to make ETH deflationary as part of a new protocol – to ensure that Ethereum tokens can be an effective store of value and increase in value over time by reducing the supply.
Stabilize Value
Stablecoins are essential to crypto and DeFi as a whole. Within the ecosystem, they provide a medium for both settlement and holding, insulated from the volatility of regular coins and tokens. The compromise here is using a central reserve where you lose out on decentralisation. Algorithmic stablecoins attempt to overcome this issue by controlling the supply.

handleDAO() {
Using The Graph to Power DAOs - Read the Snapshot Case Study, here.
This acronym stands for Decentralised Autonomous Organization. It exists as a system of predefined rules that determine which actions an organisation will take. This is different from conventional companies and is instead based on open source code and operated entirely by the community. This means that there is no single entity in charge, no directory board, and thus no centralisation of power.
The rules are built as smart contracts that govern the collective work of its contributors and community members. So while the concept of a decentralised organisation isn’t particularly new, being able to automate its working mechanisms and functions of it makes a DAO such an interesting concept.
Many communities use DAOs for automated fundraising campaigns like an ICO (Initial Coin Offering), the issuance and dispersal of fees collected on a protocol, or as decision-making and voting systems. Additionally, all of this is done without human interaction to ensure a trusted and secure process.

handleZKSnark() {
A zero-knowledge Succinct Non-interactive Argument of Knowledge zkSNARK
Let’s break it down:
Zero-knowledge - We’ve reviewed this in other articles but the short version is proving something without letting someone else know how you proved it, just that it is provable.
Succinct - Brief and clear; the proof is significantly smaller than the data it represents.
Non-interactive - Information goes from the prover to the verifier, there is no back and forth.
Argument of Knowledge - The proof is sound, there is no malicious prover to cheat the system without possessing the knowledge to support its statement.
A SNARK requires a trusted setup between prover and verifier. This is a set of public parameters that resemble the rules of a game. These parameters are generated during a trusted setup ceremony. This is a joint computation performed at a set time by a group of volunteering participants. As long as one verifier behaves honestly, the parameters are securely generated so the more parties that participate the more trusted this ceremony can be considered. This ceremony needs to be conducted for every new version of the product.

handleZKStark() {
A zero-knowledge Scalable Transparent Argument of Knowledge -zkSTARK
 Let’s explain:
 Scalable - The proof is relatively small in size and the verification takes less time even for large amounts of proofs, it is thus scalable.
Transparent - There are no requirements for a reliable configuration.
Argument of Knowledge - The proof is sound, there is no malicious prover to cheat the system without possessing the knowledge to support its statement.
zkSTARKs were created by Eli-Ben Sasson, a professor at the Technion-Israel Institute of Technology. The big difference maker here is that a zkSTARK doesn’t require an initial trusted setup - the ceremony discussed in the SNARK section. A STARKs is less computationally expensive than a SNARK and theoretically are quantum computers. So what’s the drawback? The size of proofs is much larger than a SNARK and that can drive up the cost for on-chain transactions.

handleMetaverse() {
The first use of the word is in a 1992 science fanfiction novel called Snow Crash; it is a combination of the words meta and universe. The metaverse is often linked to advanced virtual reality technology due to increasing demands for immersion. While the metaverse isn’t a gaming concept, it has grown the most in that space. A game called Second Life is often described as the first metaverse and the novel Ready Player One (later a movie) continued to grow the possibilities.
Ideally, a true Metaverse won’t support just gaming or social media, it will combine economies, digital identity, decentralized governance, and other applications. Think of how Roblox isn’t just custom games, it functions for virtual events like concerts and meetups. The game isn’t just for playing, it’s for hanging out in a virtual space.
Crypto fits into the metaverse by providing immutability and proof of ownership. Think about how NFTs would work in this instance; digital clothes, accessories, etc… would all be securely and quickly verifiable, all in a decentralized environment. In-game currencies could flourish, and a user would be able to earn money and spend it there. With wallets, the metaverse is highly accessible and with blockchain in place, we would have reliable governance much the same way we vote in real life for leadership.
A single, unified metaverse is likely a good bit away but there are many developments in the right direction for this and blockchain will lead the way.

handleArbitrum() {
Arbitrum is a scaling solution for Ethereum that drastically reduces costs and latency. Arbitrum has launched Arbitrum One on the Ethereum mainnet, and the team is getting ready for its upcoming release to the public.
Thanks to the integration with Arbitrum, The Graph’s hosting indexing and querying services are now live on the network. Developers on Arbitrum One will now be able to build and publish open APIs (subgraphs) that applications can query using GraphQL.
The Graph already supports indexing data for Ethereum, IPFS, Celo, Avalanche, Fantom, and Moonbeam. In addition, thousands of developers have already built over 10,000 subgraphs for applications like DODO, MCDEX, Uniswap, Synthetic, Gnosis, Decentraland, etc. By adding Arbitrum to that list, The Graph’s expansion efforts have taken another step in uniting the Web3 ecosystem.

handleStatistics() {
If you are looking for the live data / statistics. Then please be more specific. Here is a list of what you can ask me about:
Active Delegator Count
Active Delegation Count
Holders Count
Subgraphs Count
Curators Count
Active Indexers Count
Total Query Fees Count 
Total Staked GRT
Total GRT Delegated by Delegators
Total GRT Signalled by Curators
Total Delegated GRT by Indexers
Total GRT Burned

handleTMobile() {
Deutsche Telekom and T‑Mobile US Launch New T Challenge Seeking Web3 Development Through 5G
The global competition for startups, developers and researchers awarding innovative solutions using 5G networks is back, this time in search of Web3 technologies to change the way the world uses the internet.
 BONN, Germany and BELLEVUE, Wash. — November 2, 2022 — Deutsche Telekom AG and T-Mobile US, Inc. (NASDAQ: TMUS) have teamed up to launch the third annual T Challenge, the global stage for innovators and disruptors to compete for an award on the best Public Blockchain Protocol solutions for Web3. The solutions created by participants will leverage the power of 5G to bring Web3 to life, with 5G playing a significant role in how users stay connected to these innovations.
Submissions are officially open now through Jan. 20, 2023. Six winners will split 600,000 euros (roughly the same in U.S. dollars) and an all-expenses paid trip to Bonn, Germany to present their ideas to Deutsche Telekom and T-Mobile US.
To read the full article that mentions The Graph, see here.

handleSolana() {
The Graph Now Supports Solana with Substreams
The Graph Foundation is excited to announce support for Solana with Substreams. The Solana developer community can now begin using The Graph to build lightning-fast dapps. By using the new substreams technology, developers can efficiently extract and interpret on-chain data from Solana’s mainnet-beta to feed their applications. Providing support with substreams is the first step in bringing subgraphs to Solana.
Substreams, which are fully open-source, empower Solana developers to build with on-chain data in brand new ways, thanks to their speed and efficiency. Developers can use substreams modules, coded in Rust, to build protocol-specific data streams or market-wide analytical datasets. They can also be used to power real-time notifications, and display long, time-series information. Breaking out of walled gardens, substreams devs can leverage streams created by others to save time, and can empower the whole web3 ecosystem by making their work openly available and composable. As a result, substreams give rise to new and innovative use cases throughout the Solana developer community.
Developed by StreamingFast, a core developer in The Graph ecosystem, substreams allow for extremely fast historical processing (in batch and in streaming). Substreams open the door to many benefits, including: feeding any data systems through technology-specific sinks, reusing your Solana program’s Rust code to read on-chain data, a laser-focused debugging experience, communal and composable refinement of data streams, and reliable reorg-aware streams.
A true industry-shifting technology, substreams are poised to unlock subgraph performance with parallel data processing to greatly increase syncing speeds. Through a horizontally scalable parallel engine, substreams are capable of multiplying historical indexing performance by more than 100x.
Read the full blog here.

handleBirthday() {
The Graph turned 2 on December 17th 2022!
Many people from all over the globe helped to celebrate The Graph Network's launch on mainnet and commitment to decentralization by attending one of the following six community-led birthday events. The  FOMO was real! You can listen to the Twitter Space, here. If you missed it, dont worry, you can catch up by clicking the buttons below.
Amsterdam 
Buenos 
Aires Dubai
Lagos 
San Francisco 
Singapore

handleButtonAmsterdam() {
Colson hosted The Graph, 2 Year Birthday Celebration at Amstel Boathouse in Amsterdam.
Waiting for content from the event to be released...
You can also check out the other events below.
Buenos Aires Dubai Lagos San Francisco Singapore

handleButtonBuenosAires() {
The Graph, 2 Year Birthday Celebration at Area3 El Salvador in Buenos Aires.
You can catch up on the event via this Twitter feed made by The Graph Espanol, here.
You can also check out the other events below.
Amsterdam Dubai Lagos San Francisco Singapore          

handleButtonDubai() {
Ahmad Mardeni hosted The Graph, 2 Year Birthday Celebration at OPM Room in Dubai.
You can catch up on the event via his Twitter feed, here and here.
You can also check out the other events below.
Amsterdam Buenos Aires Lagos San Francisco Singapore

handleButtonLagos() {
TheGraphNation hosted The Graph, 2 Year Birthday Celebration at The Lekki Coliseum (TLC) in Lagos.

You can catch up on the event via their Twitter feed, here.

You can also check out the other events below.

Amsterdam Buenos Aires Dubai San Francisco Singapore


handleButtonSanFrancisco() {
The Graph, 2 Year Birthday Celebration at Edge & Node House of Web3 in San Francisco.

You can catch up on the event via their Twitter here and here.

You can also check out the other events below.

Amsterdam Buenos Aires Dubai Lagos Singapore


handleButtonSingapore() {
Pranav Maheshwari hosted The Graph, 2 Year Birthday Celebration in Singapore.

You can catch up on the event via his Twitter feed, here and here.

You can also check out the other events below.

Amsterdam Buenos Aires Dubai Lagos San Francisco


handleNews() {
If you are wanting to keep up with the latest news about The Graph, new partnership announcements and read about what is going on within the community, then the links below can help with that.
The Graph Blog
Graph Advocates Spotlight
Make sure you also follow The Graph on Twitter.

handleHello() {
Hello, how can I help you today?

handleHelp() {
You can also use the buttons below and scroll down to you find an answer!

The Graph 
Delegator 
Curator 
Indexer 
Core Devs 
Subgraph 
Live Statistics 
Community 
News 
Learn Web3

handleButtonMenu() {
The Graph 
Delegator 
Curator 
Indexer 
Core Devs 
Subgraph 
Live Statistics 
Community 
News 
Learn Web3

handleButtonTheGraph() {
Council 
Core Devs 
Founding Members
Hosted Service
Sunsetting Hosted Service 
Decentralised Data 
Roadmap 
Ecosystem Roles 
MIPs 
Jobs 
Birthday 
Graph Day 
Participant Update 
Geo 
GitHub 
Funding 
GraphQL API 
GRT Token Address 
Snapshot

handleButtonCoreDevsChat() {
The Graph`s Core Developers are:

Edge & Node - Developing decentralized protocols and advancing web3. Initial team behind The Graph.
Figment - Improving node infrastructure and multi-blockchain support.
The Graph Foundation - Stewarding the ecosystem, issuing grants, and supporting the community.
StreamingFast - Optimizing subgraph indexing performance and supporting web3 development tooling.
Semiotic- Enhancing The Graph Network through AI innovations and R&D.
The Guild - Building subgraph tooling and developing GraphQL API improvements.
GraphOps - Extracting, transforming, and serving blockchain data via the Graph Protocol.
Messari - Bringing transparency and building tools for informed decisions and investment.

Core Devs

Catch up on all Core Devs Calls here.

handleButtonCoreDevs() {
Edge and Node 
Figment 
The Graph Foundation 
StreamingFast 
Semiotic 
The Guild 
Graph Ops 
Messari

handleButtonDelegator() {
Delegator Guides 
Delegate With Wallet 
Delegate from Coinbase Wallet 
Delegation Fees 
Undelegating 
Tenderize 
Choosing an Indexer 
Compare Indexers 
Active Delegator Count 
Active Delegation Count 
Total GRT Delegated By Delegators

handleButtonCurator() { 
Curator Role
Curator Tools
Curator Count
Total GRT Signalled By Curators

handleButtonIndexer() { 
Choosing Indexers
Compare Indexers
Become Indexer
Indexer Hardware Requirements
Indexer Map
MIPs
Indexer Office Hours
Indexer Rewards
Query Fees And Indexing Reward Cut
Allocations
Active Indexer Count
Total Delegated GRT By Indexers Count

handleButtonSubgraph() { 
Subgraphs
Substreams
Sunsetting Hosted Service
Decentralised Data
Hosted VS Self-Hosting
SoulBound
FireHose
Query using Python
Messari
Subgraphs Count
GitHub

handleButtonStatistics() { 
Participant Update
Holders Count
Active Delegator Count
Active Indexer Count
Curator Count
Active Delegation Count
Query Fees
Subgraphs Count
Total GRT Delegated By Delegators
Total GRT Delegated By Indexers
Total GRT Signalled By Curators
Total Staked GRT Count
Total GRT Burned Count

handleButtonCommunity() { 
Discord 
Telegram
Twitter
Graphtronauts
Graph Day 2022
Graph Birthday
Graph Advocates
Graph Social
GRTiQ Podcast

handleMIPS(){
The Graph’s Multi-Chain Incentivized Program
The MIPs program bootstraps Indexers to add support for new chains on the decentralized network, enabling migration of multi-chain subgraphs. This is a critical expansion of support for dapps and subgraph migration ahead of the  sunsetting of the hosted service.
The MIPs program has allocated 0.75% of the GRT supply (75M GRT), with 0.5% to reward Indexers who contribute to bootstrapping the network and 0.25% allocated to migration grants for subgraph developers using multi-chain subgraphs. By the end of Q1 2023, the hosted service for all network-supported chains will be sunset, so the MIPs program will work in parallel to subgraph migration efforts.
The first chain to be supported on the decentralized network was the Gnosis Chain! New chains will be announced throughout the MIPs program, based on Indexer readiness, demand, and community sentiment. To read more about MIPs Performance & Scoring and Eligibility Requirements, see here.
The announced chains so far can be found below.
Gnosis  beta integration complete
Polygon integration underway
Arbitrum coming soon!
Avalanche coming soon!
Celo coming soon!
Optimism coming soon!

handleButtonNews() {
If you are wanting to keep up with the latest news about The Graph, new partnership announcements and read about what is going on within the community, then the links below can help with that.
The Graph Blog
Graph Advocates Spotlight
Twitter
Catagories Menu

handleButtonLearnWeb3() { 
What is the Web?
Courses
Learn Web3
Blockchain
Is it safe?
Web3 DApp
Cryptocurrencies
Ethereum
Gas
Coin Or Token
Mining
NFT
Metaverse
Smart Contract
Stablecoin
Layer Two
Token Economics
Token Burn
Nodes
DAO
CEX
DEX
IPFS
POI
POS
POW
ZKProof
ZKSnark
ZKStark
Women In Web3

noAnswer() {
Sorry, I could not find the answer. Can you try again or rephrase the question? If I still cannot help you, then please take 2 minutes to fill in the feedback form below. With your help, this will improve my knowledge and enable me to help other GRT community members in the future who may also have the same questions and seeking the answers. Thank you!

You can also use the buttons below and scroll down to you find an answer!

The Graph
Delegator
Curator
Indexer
Core Devs
Subgraph
Live Statistics
Community
News
Learn Web3






Chatbot Page Content

Please support the GRTDataHub chatbot by helping with improvements by recommending content, documentation and tutorials.
With (translators name)  help, the chatbot translations were reviewed and modified accordingly for the (community name) community to use and utilise it’s full potential.
For YouTube tutorials that are currently only in English, please enable captions/CC, click the settings button, select captions, auto-translation, and (language of chatbot).
Text tutorials and blogs are actively translated by the community, if you would like to contribute please get in touch or visit the Translator Help Page via the button below the chatbot!

Welcome! I am the GRTDataHub (language) Chatbot. I will help answer any questions that you may have about The Graph. I will provide you with a link to the relevant documentation along with text and video tutorials so that you can seek further information, if you wish. There is no such thing as a stupid question, I am here to help and educate!
If you would prefer to use buttons rather than messages within the chatbot, simply type "help" below and I will help you to find the answers.

How do I delegate?

Chatbot Improvements Form
Translator Help Page





Translator Help Page Content

Welcome to the GRTDataHub translator help page!

How are the chatbots translated?
GraphAdvocates translators have done an amazing job at translating the content for the communities to benefit greatly from this tool. You can find who has translated and proof read the content at the top each respective chatbot.
How do I help with improvements and translating in the future?
You can visit the open-source GitHub page for the GRTDataHub, here. Pull requests help you collaborate on code with other people. As pull requests are created, they’ll appear here in a searchable and filterable list.
See here, for discussions regarding new content and translations.
You can also message me directly via Telegram, Twitter or email admin@GRTDataHub.com. Another option is to use the Chatbot improvements form at the bottom of every chatbot.
